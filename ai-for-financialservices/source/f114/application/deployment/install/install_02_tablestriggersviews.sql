prompt --application/deployment/install/install_02_tablestriggersviews
begin
--   Manifest
--     INSTALL: INSTALL-02_TablesTriggersViews
--   Manifest End
wwv_flow_imp.component_begin (
 p_version_yyyy_mm_dd=>'2024.11.30'
,p_release=>'24.2.0'
,p_default_workspace_id=>7687429086004423
,p_default_application_id=>114
,p_default_id_offset=>8992108442064454
,p_default_owner=>'DOCUSER'
);
wwv_flow_imp_shared.create_install_script(
 p_id=>wwv_flow_imp.id(9029300862114045)
,p_install_id=>wwv_flow_imp.id(85574615571926073)
,p_name=>'02_TablesTriggersViews'
,p_sequence=>200
,p_script_type=>'INSTALL'
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'  CREATE TABLE "AQ$_FUNDSTRANSFER_QUEUE_TABLE_H" ',
'   (	"MSGID" RAW(16), ',
'	"SUBSCRIBER#" NUMBER, ',
'	"NAME" VARCHAR2(512), ',
'	"ADDRESS#" NUMBER, ',
'	"DEQUEUE_TIME" TIMESTAMP (6), ',
'	"TRANSACTION_ID" VARCHAR2(30), ',
'	"DEQUEUE_USER" VARCHAR2(128), ',
'	"PROPAGATED_MSGID" RAW(16), ',
'	"RETRY_COUNT" NUMBER, ',
'	"HINT" ROWID, ',
'	"SPARE" RAW(16), ',
'	 PRIMARY KEY ("MSGID", "SUBSCRIBER#", "NAME", "ADDRESS#") ENABLE',
'   ) USAGE QUEUE ORGANIZATION INDEX NOCOMPRESS ;',
'',
'  CREATE TABLE "FUNDSTRANSFER_QUEUE_TABLE" ',
'   (	"Q_NAME" VARCHAR2(128), ',
'	"MSGID" RAW(16), ',
'	"CORRID" VARCHAR2(128), ',
'	"PRIORITY" NUMBER, ',
'	"STATE" NUMBER, ',
'	"DELAY" TIMESTAMP (6), ',
'	"EXPIRATION" NUMBER, ',
'	"TIME_MANAGER_INFO" TIMESTAMP (6), ',
'	"LOCAL_ORDER_NO" NUMBER, ',
'	"CHAIN_NO" NUMBER, ',
'	"CSCN" NUMBER, ',
'	"DSCN" NUMBER, ',
'	"ENQ_TIME" TIMESTAMP (6), ',
'	"ENQ_UID" VARCHAR2(128), ',
'	"ENQ_TID" VARCHAR2(30), ',
'	"DEQ_TIME" TIMESTAMP (6), ',
'	"DEQ_UID" VARCHAR2(128), ',
'	"DEQ_TID" VARCHAR2(30), ',
'	"RETRY_COUNT" NUMBER, ',
'	"EXCEPTION_QSCHEMA" VARCHAR2(128), ',
'	"EXCEPTION_QUEUE" VARCHAR2(128), ',
'	"STEP_NO" NUMBER, ',
'	"RECIPIENT_KEY" NUMBER, ',
'	"DEQUEUE_MSGID" RAW(16), ',
'	"SENDER_NAME" VARCHAR2(128), ',
'	"SENDER_ADDRESS" VARCHAR2(1024), ',
'	"SENDER_PROTOCOL" NUMBER, ',
'	"USER_DATA" "BANKTRANSFER_Q_PAYLOAD" , ',
'	"USER_PROP" "SYS"."ANYDATA" , ',
'	 PRIMARY KEY ("MSGID")',
'  USING INDEX  ENABLE',
'   ) USAGE QUEUE ;',
'',
'  CREATE TABLE "AUDIO_T" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"AUDIO_FILE" BLOB, ',
'	"CREATED_BY" VARCHAR2(4000 CHAR), ',
'	"MIME_TYPE" VARCHAR2(100), ',
'	"CREATED_DATE" DATE DEFAULT sysdate, ',
'	"BLOB_LEN" NUMBER, ',
'	"AUDIO_CLOB" CLOB, ',
'	"INFO" VARCHAR2(4000), ',
'	 CONSTRAINT "AUDIO_T_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "BANK_CUSTOMERS" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"GENDER" VARCHAR2(1), ',
'	"CUST_YEAR_OF_BIRTH" NUMBER, ',
'	"MARITAL_STATUS" VARCHAR2(50), ',
'	"STREET_ADDRESS" VARCHAR2(255), ',
'	"CUST_POSTAL_CODE" NUMBER, ',
'	"CITY" VARCHAR2(50), ',
'	"STATE_PROVINCE" VARCHAR2(50), ',
'	"COUNTRY_ID" VARCHAR2(50), ',
'	"PHONE_NUMBER" VARCHAR2(50), ',
'	"CUST_INCOME_LEVEL" VARCHAR2(500), ',
'	"CREDIT_LIMIT" NUMBER, ',
'	"CUST_VALID" VARCHAR2(1), ',
'	"CUSTOMER_NAME" VARCHAR2(100), ',
'	"BUYING" VARCHAR2(50), ',
'	"PRICE" NUMBER, ',
'	"DOB" DATE, ',
'	"CUSTOMER_ID" VARCHAR2(20), ',
'	"ACCOUNT_NUMBER" NUMBER, ',
'	"ACCOUNT_TYPE" VARCHAR2(20), ',
'	"REFERENCE_RELATION" VARCHAR2(10), ',
'	"REFERENCE_NAME" VARCHAR2(100), ',
'	"COUNTRY" VARCHAR2(50), ',
'	"CITIZENSHIP" VARCHAR2(100), ',
'	"OCCUPATION_TYPE" VARCHAR2(50), ',
'	"INCOME_SOURCE" VARCHAR2(500), ',
'	"EDUCATIONAL_QUALIFICATION" VARCHAR2(100), ',
'	"CURRENT_BALANCE" NUMBER, ',
'	"ACCOUNT_STATUS" VARCHAR2(100), ',
'	"BANK_NAME" VARCHAR2(100), ',
'	"UID_PROOF" BLOB, ',
'	"REQUEST_CARD" VARCHAR2(10), ',
'	"EMAIL" VARCHAR2(128), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "MY_BOOKS" ',
'   (	"ID" NUMBER(*,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"FILE_NAME" VARCHAR2(900), ',
'	"FILE_SIZE" NUMBER(*,0), ',
'	"FILE_TYPE" VARCHAR2(100), ',
'	"FILE_CONTENT" BLOB, ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "VECTOR_STORE" ',
'   (	"DOC_ID" NUMBER(*,0) NOT NULL ENABLE, ',
'	"EMBED_ID" NUMBER, ',
'	"EMBED_DATA" VARCHAR2(4000), ',
'	"EMBED_VECTOR" VECTOR',
'   ) ;',
'',
'  CREATE TABLE "PIZZASHOPS" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"ADDRESS" VARCHAR2(255), ',
'	"CITY" VARCHAR2(50), ',
'	"LATITUDE" NUMBER, ',
'	"LONGITUDE" NUMBER, ',
'	"PRICE" NUMBER, ',
'	"DESCRIPTION" VARCHAR2(2000), ',
'	"PIZZA_NAME" VARCHAR2(255), ',
'	"SHOP" VARCHAR2(255), ',
'	"IMAGE" VARCHAR2(200), ',
'	"QUANTITY_AVAILABLE" NUMBER, ',
'	"UNIT_TYPE" VARCHAR2(50), ',
'	"SDO_GEOM" "SDO_GEOMETRY", ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ',
' VARRAY "SDO_GEOM"."SDO_ELEM_INFO" STORE AS SECUREFILE LOB ',
' VARRAY "SDO_GEOM"."SDO_ORDINATES" STORE AS SECUREFILE LOB ;',
'',
'  CREATE TABLE "PIZZA_ORDER" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"SESSID" VARCHAR2(4000 CHAR), ',
'	"CUSTOMER_NAME" VARCHAR2(255 CHAR), ',
'	"CUSTOMER_ADDRESS" VARCHAR2(4000 CHAR), ',
'	"CUSTOMER_INSTRUCTIONS" VARCHAR2(4000 CHAR), ',
'	"ORDER_TOTAL" NUMBER, ',
'	"ORDER_STATUS" VARCHAR2(4000 CHAR), ',
'	"MODE" VARCHAR2(100), ',
'	"DELIVERY_CHARGES" NUMBER, ',
'	"PHONE_NUMBER" VARCHAR2(100), ',
'	"CITY" VARCHAR2(100), ',
'	"C_LATITUDE" NUMBER, ',
'	"C_LONGITUDE" NUMBER, ',
'	"S_LATITUDE" NUMBER, ',
'	"S_LONGITUDE" NUMBER, ',
'	 CONSTRAINT "PIZZA_ORDER_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "PIZZA_ORDER_DETAILS" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"PIZZA_ORDER_ID" NUMBER, ',
'	"SESSID" VARCHAR2(4000 CHAR), ',
'	"PIZZA_NAME" VARCHAR2(255 CHAR), ',
'	"SHOP_NAME" VARCHAR2(255 CHAR), ',
'	"SHOP_ADDRESS" VARCHAR2(4000 CHAR), ',
'	"TOPPINGS" VARCHAR2(4000 CHAR), ',
'	"TOPPINGS_COST" NUMBER, ',
'	"CRUST_TYPE" VARCHAR2(4000 CHAR), ',
'	"CUST_COST" NUMBER, ',
'	"GIFT_WRAP" VARCHAR2(4000 CHAR), ',
'	"GIFT_WRAP_COST" NUMBER, ',
'	"QUANTITY" NUMBER, ',
'	"DELIVERY_MODE" VARCHAR2(4000 CHAR), ',
'	"DISCOUNT_COUPON" VARCHAR2(4000 CHAR), ',
'	"DISCOUNT_AMOUNT" NUMBER, ',
'	"LINE_TOTAL" NUMBER, ',
'	"SIZE" VARCHAR2(50), ',
'	"IMAGE" VARCHAR2(200), ',
'	"PIZZASHOPS_ID" NUMBER, ',
'	 CONSTRAINT "PIZZA_ORDER_DETAILS_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "AUDIO_STORAGE" ',
'   (	"ID" NUMBER, ',
'	"AUDIO_DATA" BLOB, ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "MYAUDIODATA" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"AUDIOFILE" BLOB, ',
'	"INS_DATE" DATE DEFAULT sysdate, ',
'	"FILENAME" VARCHAR2(100), ',
'	 CONSTRAINT "MYAUDIODATA_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "SQLS" ',
'   (	"ID" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"QUERY" VARCHAR2(32000), ',
'	"PROMPT" VARCHAR2(400), ',
'	"ACTION" VARCHAR2(20), ',
'	"IS_VALID" VARCHAR2(1), ',
'	 CONSTRAINT "ANSWERS_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "AICHAT" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"PROMPT" VARCHAR2(1000), ',
'	"CTIMESTAMP" TIMESTAMP (6), ',
'	"ACTION" VARCHAR2(50), ',
'	"IS_VALID" VARCHAR2(1), ',
'	"AISQL" VARCHAR2(32000), ',
'	"AIRESPONSE" VARCHAR2(32000), ',
'	"SESSID" VARCHAR2(100), ',
'	"VOICE" VARCHAR2(20), ',
'	"GENDATE" DATE DEFAULT sysdate, ',
'	"AUDIOURL" VARCHAR2(1000), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "US_HOSPITALS" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"NAICS_DESC" VARCHAR2(255), ',
'	"SOURCE" VARCHAR2(255), ',
'	"WEBSITE" VARCHAR2(255), ',
'	"OWNER" VARCHAR2(255), ',
'	"BEDS" NUMBER, ',
'	"TRAUMA" VARCHAR2(50), ',
'	"LATITUDE" NUMBER, ',
'	"LONGITUDE" NUMBER, ',
'	"OBJECTID" NUMBER, ',
'	"NAME" VARCHAR2(255), ',
'	"ADDRESS" VARCHAR2(255), ',
'	"CITY" VARCHAR2(50), ',
'	"STATE" VARCHAR2(50), ',
'	"ZIP" NUMBER, ',
'	"TELEPHONE" VARCHAR2(50), ',
'	"TYPE" VARCHAR2(50), ',
'	"STATUS" VARCHAR2(50), ',
'	"POPULATION" NUMBER, ',
'	"COUNTY" VARCHAR2(50), ',
'	"COUNTYFIPS" NUMBER, ',
'	"COUNTRY" VARCHAR2(50), ',
'	"REGION" VARCHAR2(50), ',
'	"SHAPE" "SDO_GEOMETRY", ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ',
' VARRAY "SHAPE"."SDO_ELEM_INFO" STORE AS SECUREFILE LOB ',
' VARRAY "SHAPE"."SDO_ORDINATES" STORE AS SECUREFILE LOB ;',
'',
'  CREATE TABLE "FSCUSTOMERS" ',
'   (	"CUSTOMER_ID" NUMBER, ',
'	"LAST_NAME" VARCHAR2(30), ',
'	"FIRST_NAME" VARCHAR2(30), ',
'	"STREET_ADDRESS" VARCHAR2(40), ',
'	"CITY" VARCHAR2(30), ',
'	"STATE_PROVINCE_CODE" VARCHAR2(2), ',
'	"POSTAL_CODE" VARCHAR2(9), ',
'	"CUST_GEO_LOCATION" "SDO_GEOMETRY", ',
'	"STATUS" VARCHAR2(100)',
'   ) ',
' VARRAY "CUST_GEO_LOCATION"."SDO_ELEM_INFO" STORE AS SECUREFILE LOB ',
' VARRAY "CUST_GEO_LOCATION"."SDO_ORDINATES" STORE AS SECUREFILE LOB ;',
'',
'  CREATE TABLE "RETAIL_SHOPPING" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"INV_NO" VARCHAR2(50), ',
'	"GENDER" VARCHAR2(50), ',
'	"AGE" NUMBER, ',
'	"CATEGORY" VARCHAR2(50), ',
'	"QTY" NUMBER, ',
'	"PRICE" NUMBER, ',
'	"TOTAL_PAY" NUMBER, ',
'	"METHOD" VARCHAR2(50), ',
'	"INV_DATE" DATE, ',
'	"MALL" VARCHAR2(50), ',
'	"CUST_ID" NUMBER, ',
'	"CUST_FIRST_NAME" VARCHAR2(100), ',
'	"CUST_LAST_NAME" VARCHAR2(100), ',
'	"CREDIT_CARD_NO" NUMBER, ',
'	"TRANS_STATUS" VARCHAR2(32767), ',
'	"CUST_CITY" VARCHAR2(32767), ',
'	"CUST_STATE_PROVINCE" VARCHAR2(32767), ',
'	"COUNTRY_ID" VARCHAR2(32767), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "UNESCO_SITES" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"CATEGORY" VARCHAR2(50), ',
'	"STATES_NAME_EN" VARCHAR2(255), ',
'	"REGION_EN" VARCHAR2(255), ',
'	"UNIQUE_NUMBER" NUMBER, ',
'	"ID_NO" NUMBER, ',
'	"REV_BIS" VARCHAR2(50), ',
'	"NAME_EN" VARCHAR2(255), ',
'	"SHORT_DESCRIPTION_EN" VARCHAR2(32767), ',
'	"DANGER" NUMBER, ',
'	"DATE_END" NUMBER, ',
'	"LONGITUDE" NUMBER, ',
'	"LATITUDE" NUMBER, ',
'	"CATEGORY_SHORT" VARCHAR2(1), ',
'	"GEOMETRY" VARCHAR2(32767), ',
'	"TOP_10" VARCHAR2(50), ',
'	"PANORAMA" VARCHAR2(255), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "MSGLOGS" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"LOGMSG" VARCHAR2(4000 CHAR), ',
'	 CONSTRAINT "MSGLOGS_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "MACHINE_LEARNING_CONFIGS" ',
'   (	"ID" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"CLASSIFICATION" VARCHAR2(500 CHAR), ',
'	"GC_OCI_OBJ_STORE_BASE_URL" VARCHAR2(500 CHAR), ',
'	"GC_OCI_DOC_AI_URL" VARCHAR2(500 CHAR), ',
'	"GC_OCI_DOC_AI_TIMEOUT_SECS" NUMBER, ',
'	"GC_WC_CREDENTIAL_ID" VARCHAR2(100 CHAR), ',
'	"GC_OCI_REQ_AI_PAYLOAD" VARCHAR2(3800 CHAR), ',
'	"GC_OCI_RESP_AI_PAYLOAD" VARCHAR2(3800 CHAR), ',
'	"ANALYSIS_NAME" VARCHAR2(200), ',
'	 CONSTRAINT "MACHINE_LEARNING_C_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "RELATED_LABELS" ',
'   (	"ID" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 4 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"LABEL_NAME" VARCHAR2(100 CHAR), ',
'	"TERM1" VARCHAR2(100 CHAR), ',
'	"TERM2" VARCHAR2(100 CHAR), ',
'	"TERM3" VARCHAR2(100 CHAR), ',
'	"TERM4" VARCHAR2(100 CHAR), ',
'	"TERM5" VARCHAR2(100 CHAR), ',
'	"TERM1LINK" VARCHAR2(4000), ',
'	"TERM1INFO" CLOB, ',
'	"HIGH_SCORE_LABEL" VARCHAR2(100), ',
'	"3DURL" VARCHAR2(1000), ',
'	"CONTENT_TYPE" VARCHAR2(50), ',
'	"IMAGE" BLOB, ',
'	 CONSTRAINT "RELATED_LABELS_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "FD_BUSINESS_RULES" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"UNIT" VARCHAR2(50), ',
'	"UNIT_VALUE" NUMBER, ',
'	"DESCRIPTION" VARCHAR2(32767), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "CNDEMO_DOCUMENT_AI_DOCS" ',
'   (	"DOCUMENT_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"FILE_NAME" VARCHAR2(100) NOT NULL ENABLE, ',
'	"MIME_TYPE" VARCHAR2(100) NOT NULL ENABLE, ',
'	"OBJECT_STORE_URL" VARCHAR2(1000) NOT NULL ENABLE, ',
'	"DOC_AI_JSON" CLOB, ',
'	"LANGUAGE_CODE" VARCHAR2(10), ',
'	"LANGUAGE_SCORE" NUMBER, ',
'	"DOCUMENT_TYPE_CODE" VARCHAR2(50), ',
'	"DOCUMENT_TYPE_SCORE" NUMBER, ',
'	"PAGE_COUNT" NUMBER, ',
'	"STATUS_CODE" VARCHAR2(25) DEFAULT ON NULL ''WIP'' NOT NULL ENABLE, ',
'	"CREATION_DATE" TIMESTAMP (6) WITH LOCAL TIME ZONE NOT NULL ENABLE, ',
'	"CREATED_BY" VARCHAR2(255) NOT NULL ENABLE, ',
'	"LAST_UPDATE_DATE" TIMESTAMP (6) WITH LOCAL TIME ZONE NOT NULL ENABLE, ',
'	"LAST_UPDATED_BY" VARCHAR2(255) NOT NULL ENABLE, ',
'	"LABEL1" VARCHAR2(100), ',
'	"LABEL1_SCORE" NUMBER, ',
'	"LABEL2" VARCHAR2(100), ',
'	"LABEL2_SCORE" NUMBER, ',
'	"AISPEECHTRANS_JOBID" VARCHAR2(1000), ',
'	"AISPEECH_PREFIX" VARCHAR2(1000), ',
'	"DOC_JSON" VARCHAR2(4000), ',
'	"SENTIMENTS" VARCHAR2(32000), ',
'	"AIRESPONSE" VARCHAR2(4000), ',
'	 CONSTRAINT "CNDEMO_DOCUMENT_AI_DOCS_PK" PRIMARY KEY ("DOCUMENT_ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE BLOCKCHAIN TABLE "USER_PROFILE_BC" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"EMAIL" VARCHAR2(128), ',
'	"FILE_NAME" VARCHAR2(900), ',
'	"FILE_TYPE" VARCHAR2(900), ',
'	"FILE_CONTENT" BLOB, ',
'	"GENDATE" DATE DEFAULT sysdate, ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "COMMON_USERS" ',
'   (	"USER_ID" NUMBER NOT NULL ENABLE, ',
'	"EMAIL" VARCHAR2(255), ',
'	"PASSWORD" VARCHAR2(2000), ',
'	"VERIFICATION_CODE" VARCHAR2(255), ',
'	"ROLE_ID" NUMBER, ',
'	"REFER_URL" VARCHAR2(1000), ',
'	"REFER_USER_ID" NUMBER, ',
'	"POINTS" NUMBER, ',
'	"FIRST_NAME" VARCHAR2(100), ',
'	"LAST_NAME" VARCHAR2(100), ',
'	"ADDRESS1" VARCHAR2(255), ',
'	"ADDRESS2" VARCHAR2(255), ',
'	"CITY" VARCHAR2(100), ',
'	"STATEZIP" VARCHAR2(100), ',
'	"ANSWER" VARCHAR2(50), ',
'	"COUNTRY" VARCHAR2(20), ',
'	"GENDER" VARCHAR2(10), ',
'	 CONSTRAINT "COMMON_USER_PK" PRIMARY KEY ("USER_ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "COMMON_ROLE" ',
'   (	"ROLE_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"ROLE_NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE, ',
'	"ROLE_DESC" VARCHAR2(1000 CHAR), ',
'	 CONSTRAINT "COMMON_ROLE_PK" PRIMARY KEY ("ROLE_ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "TECHNOLOGIES" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"TECHNOLOGIES" VARCHAR2(50), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "HLTERM" ',
'   (	"TERMID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"VAL" NUMBER, ',
'	"DESCRIPTION" VARCHAR2(100 CHAR), ',
'	 CONSTRAINT "HLTERM_PK" PRIMARY KEY ("TERMID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "BANK_ACCOUNTS" ',
'   (	"ID" NUMBER, ',
'	"NAME" VARCHAR2(400), ',
'	"BALANCE" NUMBER(20,2), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "BANK_LEDGER" ',
'   (	"BANK" VARCHAR2(128), ',
'	"DEPOSIT_DATE" DATE, ',
'	"DEPOSIT_AMOUNT" NUMBER',
'   ) ;',
'',
'  CREATE TABLE "ANNUAL_DEATH_CAUSE" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"ENTITY" VARCHAR2(50), ',
'	"CODE" VARCHAR2(50), ',
'	"YEAR" NUMBER, ',
'	"DEATHS_MENINGITIS" NUMBER, ',
'	"DEATHS_ALZHEIMERS_DISEASE" NUMBER, ',
'	"DEATHS_PARKINSON_DISEASE" NUMBER, ',
'	"DEATHS_NUTRITIONAL_DEFICIENCIES" NUMBER, ',
'	"DEATHS_MALARIA" NUMBER, ',
'	"DEATHS_MATERNAL_DISORDERS" NUMBER, ',
'	"DEATHS_HIV_AIDS" NUMBER, ',
'	"DEATHS_DRUG_DISORDERS" NUMBER, ',
'	"DEATHS_TUBERCULOSIS" NUMBER, ',
'	"DEATHS_CARDIOVASCULAR" NUMBER, ',
'	"DEATHS_RESPIRATORY_INFECTIONS" NUMBER, ',
'	"DEATHS_NEONATAL_DISORDERS" NUMBER, ',
'	"DEATHS_ALCOHOL" NUMBER, ',
'	"DEATHS_DIARRHEAL_DISEASES" NUMBER, ',
'	"DEATHS_ENVIRONMENTAL_CHANGES" NUMBER, ',
'	"DEATHS_NEOPLASMS" NUMBER, ',
'	"DEATHS_DIABETES" NUMBER, ',
'	"DEATHS_CHRONIC_KIDNEY" NUMBER, ',
'	"DEATHS_PROTEIN_MALNUTRITION" NUMBER, ',
'	"DEATHS_CHRONIC_RESPIRATORY_DISEASES" NUMBER, ',
'	"DEATHS_LIVER_DISEASES" NUMBER, ',
'	"DEATHS_DIGESTIVE_DISEASES" NUMBER, ',
'	"DEATHS_ACUTE_HEPATITIS" NUMBER, ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "CNDEMO_DOCUMENT_AI_FIELDS" ',
'   (	"WORD_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"DOCUMENT_ID" NUMBER NOT NULL ENABLE, ',
'	"FIELD_TYPE_CODE" VARCHAR2(50) NOT NULL ENABLE, ',
'	"FIELD_LABEL" VARCHAR2(100), ',
'	"LABEL_SCORE" NUMBER, ',
'	"FIELD_VALUE" VARCHAR2(1000), ',
'	"CREATION_DATE" TIMESTAMP (6) WITH LOCAL TIME ZONE NOT NULL ENABLE, ',
'	"CREATED_BY" VARCHAR2(255) NOT NULL ENABLE, ',
'	"LAST_UPDATE_DATE" TIMESTAMP (6) WITH LOCAL TIME ZONE NOT NULL ENABLE, ',
'	"LAST_UPDATED_BY" VARCHAR2(255) NOT NULL ENABLE, ',
'	"EXPENSE" VARCHAR2(50), ',
'	 CONSTRAINT "CNDEMO_DOCUMENT_AI_FIELDS_PK" PRIMARY KEY ("WORD_ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "CUSTOMERS" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"GENDER" VARCHAR2(1), ',
'	"CUST_YEAR_OF_BIRTH" NUMBER, ',
'	"MARITAL_STATUS" VARCHAR2(50), ',
'	"ADDRESS" VARCHAR2(255), ',
'	"POST_CODE" NUMBER, ',
'	"CITY" VARCHAR2(50), ',
'	"STATE_PROVINCE" VARCHAR2(50), ',
'	"COUNTRY_ID" VARCHAR2(50), ',
'	"PHONE_NUMBER" VARCHAR2(50), ',
'	"INCOME_LEVEL" VARCHAR2(50), ',
'	"CREDIT_LIMIT" NUMBER, ',
'	"CUST_VALID" VARCHAR2(1), ',
'	"CUSTOMER_NAME" VARCHAR2(100), ',
'	"BUYING" VARCHAR2(50), ',
'	"PRICE" NUMBER, ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "CC_FD" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"CUST_ID" NUMBER, ',
'	"CC_NO" NUMBER, ',
'	"STATUS" VARCHAR2(50), ',
'	"VALIDITY" DATE, ',
'	"FIRST_NAME" VARCHAR2(50), ',
'	"LAST_NAME" VARCHAR2(50), ',
'	"BANK_NAME" VARCHAR2(50), ',
'	"COMMENTS" VARCHAR2(100), ',
'	"CARD_TYPE" VARCHAR2(10), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "RETAIL_SHOPPING_FD" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"INV_NO" VARCHAR2(50), ',
'	"GENDER" VARCHAR2(50), ',
'	"AGE" NUMBER, ',
'	"CATEGORY" VARCHAR2(50), ',
'	"QTY" NUMBER, ',
'	"PRICE" NUMBER, ',
'	"TOTAL_PAY" NUMBER, ',
'	"METHOD" VARCHAR2(50), ',
'	"INV_DATE" TIMESTAMP (6), ',
'	"MALL" VARCHAR2(50), ',
'	"CUST_ID" NUMBER, ',
'	"CUST_FIRST_NAME" VARCHAR2(100), ',
'	"CUST_LAST_NAME" VARCHAR2(100), ',
'	"CREDIT_CARD_NO" NUMBER, ',
'	"TRANS_STATUS" VARCHAR2(20), ',
'	"CUST_CITY" VARCHAR2(100), ',
'	"CUST_STATE_PROVINCE" VARCHAR2(100), ',
'	"TRANSACTION_STATUS" VARCHAR2(50), ',
'	"COMMENTS" VARCHAR2(500), ',
'	"COUNTRY_ID" VARCHAR2(50), ',
'	"TX_TIMESTAMP" TIMESTAMP (6), ',
'	"MERCHANT_ID" NUMBER, ',
'	"MERCHANT_CITY" VARCHAR2(50), ',
'	"MERCHANT_REGION" VARCHAR2(255), ',
'	"MERCHANT_STATE" VARCHAR2(100), ',
'	"MERCHANT_PLACE" VARCHAR2(100), ',
'	"LONGITUDE" NUMBER, ',
'	"LATITUDE" NUMBER, ',
'	"MERCHANT_PLACE_ID" NUMBER, ',
'	"CUSTOMER_FULLNAME" VARCHAR2(50), ',
'	"MERCHANT_FULLNAME" VARCHAR2(50), ',
'	"INV_TIMESTAMP" TIMESTAMP (6) WITH LOCAL TIME ZONE, ',
'	"CC_ID" NUMBER, ',
'	"TIME_DIFFERENCE_NUMBER" NUMBER, ',
'	"TX_TYPE" VARCHAR2(20), ',
'	"WORKFLOW_STATUS" VARCHAR2(100), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "PIZZA_DELIVERY_MODE" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"DELIVERED_BY" VARCHAR2(1000 CHAR), ',
'	"IMAGE" VARCHAR2(1000 CHAR), ',
'	"CHARGES" NUMBER, ',
'	"DURATION" NUMBER, ',
'	 CONSTRAINT "DELIVERY_MODE_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "PASSENGER_LIST" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"PASSENGER_NAME" VARCHAR2(255 CHAR), ',
'	"PASSPORT_NUMBER" VARCHAR2(100 CHAR), ',
'	"DESTINATION" VARCHAR2(100 CHAR), ',
'	"MSG_ID" VARCHAR2(100 CHAR), ',
'	"MSG_STRING" VARCHAR2(100 CHAR), ',
'	"ENTER_DATE" DATE DEFAULT sysdate, ',
'	"EXIT_DATE" DATE, ',
'	"AIRPORT_CHECKIN_QUEUE" BOOLEAN, ',
'	"BOARDING_PASS_BAGGAGE_SERVICE" BOOLEAN, ',
'	"IMMIGRATION_SERVICE" BOOLEAN, ',
'	"SECURITY_SERVICE" BOOLEAN, ',
'	"DEPARTURES_QUEUE" BOOLEAN, ',
'	"BOOKING_ID" VARCHAR2(50), ',
'	"COMMENTS" VARCHAR2(100), ',
'	 CONSTRAINT "PASSENGER_LIST_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "HOSPITALS" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"NAME" VARCHAR2(255), ',
'	"ADDRESS" VARCHAR2(255), ',
'	"CITY" VARCHAR2(50), ',
'	"PHONE" VARCHAR2(50), ',
'	"COUNTRY" VARCHAR2(50), ',
'	"BEDS" NUMBER, ',
'	"TRAUMA" VARCHAR2(50), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "BANK_TRANSFERS" ',
'   (	"TXN_ID" NUMBER, ',
'	"SRC_ACCT_ID" NUMBER, ',
'	"DST_ACCT_ID" NUMBER, ',
'	"DESCRIPTION" VARCHAR2(400), ',
'	"AMOUNT" NUMBER, ',
'	"PROFILE" VARCHAR2(20), ',
'	"INV_NO" VARCHAR2(50), ',
'	"MERCHANT_REGION" VARCHAR2(100), ',
'	"MERCHANT_STATE" VARCHAR2(100), ',
'	"MERCHANT_PLACE" VARCHAR2(100), ',
'	 PRIMARY KEY ("TXN_ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "FD_ANM" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"ANOMALY_NAME" VARCHAR2(100), ',
'	"ANOMALY_OCID" VARCHAR2(255), ',
'	"TX_TIMESTAMP" TIMESTAMP (9) WITH TIME ZONE, ',
'	"JSON_URL" VARCHAR2(1000), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "FD_TX_HISTORIC_DATA" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"TX_TIMESTAMP" TIMESTAMP (9) WITH TIME ZONE, ',
'	"TOTAL_PAY" NUMBER, ',
'	"IS_ANOMALY" VARCHAR2(50), ',
'	"INV_NO" VARCHAR2(50), ',
'	"CATEGORY" VARCHAR2(50), ',
'	"CUST_ID" NUMBER, ',
'	"CREDIT_CARD_NO" NUMBER, ',
'	"TRANS_STATUS" VARCHAR2(20), ',
'	"TRANSACTION_STATUS" VARCHAR2(50), ',
'	"MERCHANT_ID" NUMBER, ',
'	"MERCHANT_CITY" VARCHAR2(100), ',
'	"MERCHANT_REGION" VARCHAR2(255), ',
'	"MERCHANT_STATE" VARCHAR2(100), ',
'	"MERCHANT_PLACE" VARCHAR2(100), ',
'	"LONGITUDE" NUMBER, ',
'	"LATITUDE" NUMBER, ',
'	"MERCHANT_PLACE_ID" NUMBER, ',
'	"CUSTOMER_FULLNAME" VARCHAR2(100), ',
'	"MERCHANT_FULLNAME" VARCHAR2(100), ',
'	"MALL" VARCHAR2(50), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "FINBANK_ACCOUNTS" ',
'   (	"ID_1" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"ID" NUMBER, ',
'	"ACC_ID" NUMBER, ',
'	"FIRST_NAME" VARCHAR2(100), ',
'	"LAST_NAME" VARCHAR2(100), ',
'	"PHONE_NUMBER" VARCHAR2(50), ',
'	"ACC_DATE" DATE, ',
'	"JOB_ID" VARCHAR2(50), ',
'	"MANAGER_ID" NUMBER, ',
'	"DEPARTMENT_ID" NUMBER, ',
'	"IS_FRAUD" VARCHAR2(50), ',
'	"PROFILE" VARCHAR2(20), ',
'	"FULL_NAME" VARCHAR2(60), ',
'	"GENDER" VARCHAR2(20), ',
'	"AGE" NUMBER, ',
'	 PRIMARY KEY ("ID_1")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "APPUSERS_OLD" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"EMAIL" VARCHAR2(255), ',
'	"PASSWORD" VARCHAR2(2000), ',
'	"QUESTION" VARCHAR2(500), ',
'	"ANSWER" VARCHAR2(50), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "APPUSERS" ',
'   (	"EMAIL" VARCHAR2(255), ',
'	"PASSWORD" VARCHAR2(255) NOT NULL ENABLE, ',
'	"SECURITY_QUESTION" VARCHAR2(255) NOT NULL ENABLE, ',
'	"SECURITY_ANSWER" VARCHAR2(255) NOT NULL ENABLE, ',
'	"CREATED_AT" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, ',
'	 PRIMARY KEY ("EMAIL")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "FD_TRANSACTIONS_LOG" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"FROM_BANK_ID" NUMBER, ',
'	"FROM_BANK_STATUS" VARCHAR2(10 CHAR), ',
'	"FROM_BANK_CUST_ID" NUMBER, ',
'	"FROM_BANK_CUST_NAME" VARCHAR2(100 CHAR), ',
'	"TRANSFER_AMOUNT" NUMBER, ',
'	"TO_BANK_ID" NUMBER, ',
'	"TO_BANK_STATUS" VARCHAR2(10 CHAR), ',
'	"TO_BANK_CUST_ID" NUMBER, ',
'	"TO_BANK_CUST_NAME" VARCHAR2(100 CHAR), ',
'	"STATUS" VARCHAR2(20 CHAR), ',
'	"REASON" VARCHAR2(200 CHAR), ',
'	"TX_DATE" DATE DEFAULT sysdate, ',
'	"TX_TIMESTAMP" TIMESTAMP (6), ',
'	"MSG_ID" VARCHAR2(100), ',
'	"MSG" VARCHAR2(400), ',
'	"FROM_EMAIL" VARCHAR2(50), ',
'	 CONSTRAINT "FD_TRANSACTIONS_LOG_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "FD_BANK_NAMES" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"BANK_NAME" VARCHAR2(50 CHAR), ',
'	"BANK_STATUS" VARCHAR2(10 CHAR), ',
'	 CONSTRAINT "FD_BANK_NAMES_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "BANK_CUSTOMERS_BENEFICIARIES" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"BENEFICIARIES_NAME" VARCHAR2(128), ',
'	"BENEFICIARIES_TO_CUSTID" NUMBER, ',
'	"BENEFICIARIES_FROM_CUSTID" NUMBER, ',
'	 CONSTRAINT "BANK_CUSTOMERS_BENEFICIARIES_ID_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "FD_BANK_TRANSACTIONS" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"TXDATE" DATE, ',
'	"TRANSACTIONTYPE" VARCHAR2(1000), ',
'	"DEBIT" NUMBER, ',
'	"CREDIT" NUMBER, ',
'	"BALANCE" NUMBER, ',
'	"TXID" VARCHAR2(100), ',
'	 PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  CREATE TABLE "PATIENTS" ',
'   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, ',
'	"DOCUMENT_ID" NUMBER, ',
'	"LABEL1" VARCHAR2(100 CHAR), ',
'	"LABEL1_SCORE" NUMBER, ',
'	"LABEL2" VARCHAR2(100 CHAR), ',
'	"LABEL2_SCORE" NUMBER, ',
'	"PATIENTNAME" VARCHAR2(100 CHAR), ',
'	"GENDER" VARCHAR2(10 CHAR), ',
'	"AGE" NUMBER, ',
'	"ADMISSIONSTATUS" VARCHAR2(50 CHAR), ',
'	"DOCTORSCOMMENT" VARCHAR2(500 CHAR), ',
'	"XRAYLINK" VARCHAR2(500 CHAR), ',
'	"APPOINTMENTDATE" DATE, ',
'	"PATIENT_ID" NUMBER, ',
'	"DOCTOR_ID" NUMBER, ',
'	"HOSPITAL_NAME" VARCHAR2(200), ',
'	"BED_DETAILS" VARCHAR2(200), ',
'	"ADMISSION_CHARGES" VARCHAR2(200), ',
'	"ADMINCOMMENTS" VARCHAR2(500), ',
'	"DOCTOR_EMAIL" VARCHAR2(100), ',
'	"PATIENT_EMAIL" VARCHAR2(100), ',
'	 CONSTRAINT "PATIENTS_PK" PRIMARY KEY ("ID")',
'  USING INDEX  ENABLE',
'   ) ;',
'',
'  ALTER TABLE "BANK_CUSTOMERS_BENEFICIARIES" ADD CONSTRAINT "BANK_CUSTOMERS_BENEFICIARIES_ID_FK" FOREIGN KEY ("BENEFICIARIES_FROM_CUSTID")',
'	  REFERENCES "BANK_CUSTOMERS" ("ID") ENABLE;',
'',
'  CREATE INDEX "BANK_CUSTOMERS_BENEFICIARIES_I1" ON "BANK_CUSTOMERS_BENEFICIARIES" ("BENEFICIARIES_FROM_CUSTID") ',
'  ;',
'',
'  ALTER TABLE "BANK_TRANSFERS" ADD FOREIGN KEY ("SRC_ACCT_ID")',
'	  REFERENCES "BANK_ACCOUNTS" ("ID") ENABLE;',
'  ALTER TABLE "BANK_TRANSFERS" ADD FOREIGN KEY ("DST_ACCT_ID")',
'	  REFERENCES "BANK_ACCOUNTS" ("ID") ENABLE;',
'',
'  CREATE OR REPLACE EDITIONABLE TRIGGER "CNDEMO_DOCUMENT_AI_DOCS_BIU" ',
'BEFORE INSERT OR UPDATE ON CNDEMO_DOCUMENT_AI_DOCS FOR EACH ROW ',
'BEGIN ',
'  IF INSERTING THEN ',
'    :new.created_by       := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),SYS_CONTEXT(''USERENV'', ''SESSION_USER'')); ',
'    :new.creation_date    := current_timestamp; ',
'    :new.last_updated_by  := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),SYS_CONTEXT(''USERENV'', ''SESSION_USER'')); ',
'    :new.last_update_date := current_timestamp; ',
'  ELSIF UPDATING THEN ',
'    :new.last_updated_by  := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),USER); ',
'    :new.last_update_date := current_timestamp; ',
'  END IF; ',
'END; ',
'',
'/',
'ALTER TRIGGER "CNDEMO_DOCUMENT_AI_DOCS_BIU" ENABLE;',
'',
'  CREATE IND'))
);
wwv_flow_imp_shared.append_to_install_script(
 p_id=>wwv_flow_imp.id(9029300862114045)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'EX "CNDEMO_DOCUMENT_AI_FIELDS_N1" ON "CNDEMO_DOCUMENT_AI_FIELDS" ("DOCUMENT_ID") ',
'  ;',
'',
'  CREATE OR REPLACE EDITIONABLE TRIGGER "CNDEMO_DOCUMENT_AI_FIELDS_BIU" ',
'BEFORE INSERT OR UPDATE ON CNDEMO_DOCUMENT_AI_FIELDS FOR EACH ROW ',
'BEGIN ',
'  IF INSERTING THEN ',
'    :new.created_by       := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),SYS_CONTEXT(''USERENV'', ''SESSION_USER'')); ',
'    :new.creation_date    := current_timestamp; ',
'    :new.last_updated_by  := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),SYS_CONTEXT(''USERENV'', ''SESSION_USER'')); ',
'    :new.last_update_date := current_timestamp; ',
'  ELSIF UPDATING THEN ',
'    :new.last_updated_by  := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),USER); ',
'    :new.last_update_date := current_timestamp; ',
'  END IF; ',
'END; ',
'',
'/',
'ALTER TRIGGER "CNDEMO_DOCUMENT_AI_FIELDS_BIU" ENABLE;',
'',
'  ALTER TABLE "COMMON_USERS" ADD CONSTRAINT "COMMON_USERS_FK" FOREIGN KEY ("ROLE_ID")',
'	  REFERENCES "COMMON_ROLE" ("ROLE_ID") ENABLE;',
'',
'  CREATE OR REPLACE EDITIONABLE TRIGGER "BI_COMMON_USERS" ',
'  before insert on "COMMON_USERS"                ',
'  for each row   ',
'begin    ',
'  if :NEW."USER_ID" is null then  ',
'    select "COMMON_USER_SEQ".nextval into :NEW."USER_ID" from sys.dual;  ',
'  end if;  ',
'end;',
'/',
'ALTER TRIGGER "BI_COMMON_USERS" ENABLE;',
'',
'  CREATE INDEX "AQ$_FUNDSTRANSFER_QUEUE_TABLE_I" ON "FUNDSTRANSFER_QUEUE_TABLE" ("Q_NAME", "STATE", "ENQ_TIME", "STEP_NO", "CHAIN_NO", "LOCAL_ORDER_NO") ',
'  ;',
'',
'  CREATE INDEX "AQ$_FUNDSTRANSFER_QUEUE_TABLE_T" ON "FUNDSTRANSFER_QUEUE_TABLE" ("TIME_MANAGER_INFO") ',
'  ;',
'',
'  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_MYBOOKS_VECTOR_STORE_COMPOUND" ',
'FOR INSERT ON my_books ',
'COMPOUND TRIGGER ',
' ',
'    TYPE t_id_tab IS TABLE OF my_books.id%TYPE INDEX BY PLS_INTEGER; ',
'    v_ids t_id_tab; ',
' ',
'    AFTER EACH ROW IS ',
'    BEGIN ',
'        v_ids(v_ids.COUNT + 1) := :NEW.id; ',
'    END AFTER EACH ROW; ',
' ',
'    AFTER STATEMENT IS ',
'    BEGIN ',
'        FOR i IN 1 .. v_ids.COUNT LOOP ',
'            INSERT INTO vector_store (doc_id, embed_id, embed_data, embed_vector) ',
'            SELECT dt.id AS doc_id,  ',
'                  et.embed_id,  ',
'                  et.embed_data,  ',
'                  to_vector(et.embed_vector) AS embed_vector ',
'            FROM my_books dt ',
'            -- CROSS JOIN TABLE( ',
'            --     dbms_vector_chain.utl_to_embeddings( ',
'            --         dbms_vector_chain.utl_to_chunks( ',
'            --             dbms_vector_chain.utl_to_text(dt.file_content),  ',
'            --             json(''{"by":"words","max":"300","split":"sentence","normalize":"all"}'') ',
'            --         ), ',
'            --         json(''{"provider":"database", "model":"tinybert_model"}'') ',
'            --     ) ',
'            -- )  t ',
'            --dbms_vector_chain.utl_to_chunks(dbms_vector_chain.utl_to_text(dt.data), json(''{"normalize":"all"}'')), ',
'            CROSS JOIN TABLE( ',
'                dbms_vector_chain.utl_to_embeddings( ',
'                    dbms_vector_chain.utl_to_chunks( ',
'                        dbms_vector_chain.utl_to_text(dt.file_content),  ',
'                        --json(''{"by":"words","max":"300","split":"sentence","normalize":"all"}'') ',
'                        json(''{"normalize":"all"}'') ',
'                    ), ',
'                    json(''{"provider":"database", "model":"doc_model"}'') ',
'                ) ',
'            )  t ',
'            CROSS JOIN JSON_TABLE( ',
'                t.column_value,  ',
'                ''$[*]'' COLUMNS ( ',
'                    embed_id NUMBER PATH ''$.embed_id'', ',
'                    embed_data VARCHAR2(4000) PATH ''$.embed_data'', ',
'                    embed_vector CLOB PATH ''$.embed_vector'' ',
'                ) ',
'            ) AS et ',
'            WHERE dt.id = v_ids(i); ',
'        END LOOP; ',
'    END AFTER STATEMENT; ',
' ',
'END trg_mybooks_vector_store_compound;',
'/',
'ALTER TRIGGER "TRG_MYBOOKS_VECTOR_STORE_COMPOUND" ENABLE;',
'',
'  CREATE OR REPLACE EDITIONABLE TRIGGER "PASSENGER_LIST_TRG" ',
'after ',
'update on "PASSENGER_LIST"  ',
'for each row ',
'declare ',
'        v_booking_id number; ',
'        -- v_n number := 0; ',
'        -- v_min_time_diff_number number; ',
'         ',
'begin ',
'   null;  ',
'    ',
'end; ',
'  ',
' ',
' ',
'-- create or replace TRIGGER "RETAIL_SHOPPING_FD_TRG"  ',
'-- before ',
'-- insert on "RETAIL_SHOPPING_FD"  ',
'-- for each row ',
'-- declare ',
'--         v_ccid number; ',
'--         v_n number := 0; ',
'--         v_min_time_diff_number number; ',
'--         v_min_tx_value number; ',
'--         v_max_tx_value number; ',
'-- begin ',
' ',
'--     SELECT unit_value into v_min_time_diff_number from FD_BUSINESS_RULES where unit = ''Minimum Time Frequency''; ',
'--     SELECT unit_value into v_min_tx_value from FD_BUSINESS_RULES where unit = ''Approved Purchase''; ',
'--     SELECT unit_value into v_max_tx_value from FD_BUSINESS_RULES where unit = ''Rejected Purchase''; ',
' ',
'--     SELECT id ',
'--       INTO v_ccid  ',
'--       FROM cc_fd ',
'--      WHERE cc_no = :new.credit_card_no;    ',
'--     if inserting then ',
'--         if :new.total_pay < v_min_tx_value then ',
'--                 :new.transaction_status := ''APPROVED''; ',
'--                 :new.comments := ''Lower than minimum amount of $ ''||v_min_tx_value||''''; ',
'--         elsif :new.total_pay >= v_min_tx_value AND :new.total_pay < v_max_tx_value then ',
'--                 :new.transaction_status := ''OnHold''; ',
'--                 :new.trans_status := ''UNREAD''; ',
'--         else  ',
'--                 :new.transaction_status := ''REJECTED''; ',
'--                 :new.comments := ''Higher than allowed amount of $ ''||v_max_tx_value||''''; ',
'--         end if;  ',
'--         :new.cc_id := v_ccid;     ',
'--    end if;      ',
'    ',
'-- end; ',
'--; ',
'',
'/',
'ALTER TRIGGER "PASSENGER_LIST_TRG" ENABLE;',
'',
'  ALTER TABLE "PIZZA_ORDER_DETAILS" ADD CONSTRAINT "PIZZA_ORDER_DETAILS_PIZZA_ORDER_ID_FK" FOREIGN KEY ("PIZZA_ORDER_ID")',
'	  REFERENCES "PIZZA_ORDER" ("ID") ENABLE;',
'',
'  CREATE INDEX "PIZZA_ORDER_DETAILS_I1" ON "PIZZA_ORDER_DETAILS" ("PIZZA_ORDER_ID") ',
'  ;',
'',
'  CREATE OR REPLACE EDITIONABLE TRIGGER "RETAIL_SHOPPING_FD_TRG" ',
'before ',
'insert on "RETAIL_SHOPPING_FD"  ',
'for each row ',
'declare ',
'        v_ccid number; ',
'        v_n number := 0; ',
'        v_min_time_diff_number number; ',
'        v_min_tx_value number; ',
'        v_max_tx_value number; ',
'begin ',
' ',
'    SELECT unit_value into v_min_time_diff_number from FD_BUSINESS_RULES where unit = ''Minimum Time Frequency''; ',
'    SELECT unit_value into v_min_tx_value from FD_BUSINESS_RULES where unit = ''Approved Purchase''; ',
'    SELECT unit_value into v_max_tx_value from FD_BUSINESS_RULES where unit = ''Rejected Purchase''; ',
' ',
'    SELECT id ',
'      INTO v_ccid  ',
'      FROM cc_fd ',
'     WHERE cc_no = :new.credit_card_no;    ',
'    if inserting then ',
'        if :new.total_pay < v_min_tx_value then ',
'                :new.transaction_status := ''APPROVE''; ',
'                :new.comments := ''Lower than minimum amount of $ ''||v_min_tx_value||''''; ',
'        elsif :new.total_pay >= v_min_tx_value AND :new.total_pay < v_max_tx_value then ',
'                :new.transaction_status := ''OnHold''; ',
'                :new.trans_status := ''UNREAD''; ',
'        else  ',
'                :new.transaction_status := ''REJECT''; ',
'                :new.comments := ''Higher than allowed amount of $ ''||v_max_tx_value||''''; ',
'        end if;  ',
'        :new.cc_id := v_ccid;     ',
'   end if;      ',
'    ',
'end;',
'/',
'ALTER TRIGGER "RETAIL_SHOPPING_FD_TRG" ENABLE;',
'',
'  CREATE INDEX "ANSWERS_I1" ON "SQLS" ("QUERY") ',
'  ;',
'',
'  ALTER TABLE "VECTOR_STORE" ADD FOREIGN KEY ("DOC_ID")',
'	  REFERENCES "MY_BOOKS" ("ID") ENABLE;',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'',
'create or replace TRIGGER "BI_COMMON_USERS" ',
'  before insert on "COMMON_USERS"                ',
'  for each row   ',
'begin    ',
'  if :NEW."USER_ID" is null then  ',
'    select "COMMON_USER_SEQ".nextval into :NEW."USER_ID" from sys.dual;  ',
'  end if;  ',
'end;',
'/',
'create or replace TRIGGER "CNDEMO_DOCUMENT_AI_DOCS_BIU"  ',
'BEFORE INSERT OR UPDATE ON CNDEMO_DOCUMENT_AI_DOCS FOR EACH ROW ',
'BEGIN ',
'  IF INSERTING THEN ',
'    :new.created_by       := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),SYS_CONTEXT(''USERENV'', ''SESSION_USER'')); ',
'    :new.creation_date    := current_timestamp; ',
'    :new.last_updated_by  := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),SYS_CONTEXT(''USERENV'', ''SESSION_USER'')); ',
'    :new.last_update_date := current_timestamp; ',
'  ELSIF UPDATING THEN ',
'    :new.last_updated_by  := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),USER); ',
'    :new.last_update_date := current_timestamp; ',
'  END IF; ',
'END; ',
'/',
'create or replace TRIGGER "CNDEMO_DOCUMENT_AI_FIELDS_BIU"  ',
'BEFORE INSERT OR UPDATE ON CNDEMO_DOCUMENT_AI_FIELDS FOR EACH ROW ',
'BEGIN ',
'  IF INSERTING THEN ',
'    :new.created_by       := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),SYS_CONTEXT(''USERENV'', ''SESSION_USER'')); ',
'    :new.creation_date    := current_timestamp; ',
'    :new.last_updated_by  := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),SYS_CONTEXT(''USERENV'', ''SESSION_USER'')); ',
'    :new.last_update_date := current_timestamp; ',
'  ELSIF UPDATING THEN ',
'    :new.last_updated_by  := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),USER); ',
'    :new.last_update_date := current_timestamp; ',
'  END IF; ',
'END; ',
'/',
'create or replace TRIGGER "PASSENGER_LIST_TRG"  ',
'after ',
'update on "PASSENGER_LIST"  ',
'for each row ',
'declare ',
'        v_booking_id number; ',
'        -- v_n number := 0; ',
'        -- v_min_time_diff_number number; ',
'         ',
'begin ',
'   null;  ',
'    ',
'end; ',
'  ',
' ',
' ',
'-- create or replace TRIGGER "RETAIL_SHOPPING_FD_TRG"  ',
'-- before ',
'-- insert on "RETAIL_SHOPPING_FD"  ',
'-- for each row ',
'-- declare ',
'--         v_ccid number; ',
'--         v_n number := 0; ',
'--         v_min_time_diff_number number; ',
'--         v_min_tx_value number; ',
'--         v_max_tx_value number; ',
'-- begin ',
' ',
'--     SELECT unit_value into v_min_time_diff_number from FD_BUSINESS_RULES where unit = ''Minimum Time Frequency''; ',
'--     SELECT unit_value into v_min_tx_value from FD_BUSINESS_RULES where unit = ''Approved Purchase''; ',
'--     SELECT unit_value into v_max_tx_value from FD_BUSINESS_RULES where unit = ''Rejected Purchase''; ',
' ',
'--     SELECT id ',
'--       INTO v_ccid  ',
'--       FROM cc_fd ',
'--      WHERE cc_no = :new.credit_card_no;    ',
'--     if inserting then ',
'--         if :new.total_pay < v_min_tx_value then ',
'--                 :new.transaction_status := ''APPROVED''; ',
'--                 :new.comments := ''Lower than minimum amount of $ ''||v_min_tx_value||''''; ',
'--         elsif :new.total_pay >= v_min_tx_value AND :new.total_pay < v_max_tx_value then ',
'--                 :new.transaction_status := ''OnHold''; ',
'--                 :new.trans_status := ''UNREAD''; ',
'--         else  ',
'--                 :new.transaction_status := ''REJECTED''; ',
'--                 :new.comments := ''Higher than allowed amount of $ ''||v_max_tx_value||''''; ',
'--         end if;  ',
'--         :new.cc_id := v_ccid;     ',
'--    end if;      ',
'    ',
'-- end; ',
'--; ',
'/',
'create or replace TRIGGER "RETAIL_SHOPPING_FD_TRG"  ',
'before ',
'insert on "RETAIL_SHOPPING_FD"  ',
'for each row ',
'declare ',
'        v_ccid number; ',
'        v_n number := 0; ',
'        v_min_time_diff_number number; ',
'        v_min_tx_value number; ',
'        v_max_tx_value number; ',
'begin ',
' ',
'    SELECT unit_value into v_min_time_diff_number from FD_BUSINESS_RULES where unit = ''Minimum Time Frequency''; ',
'    SELECT unit_value into v_min_tx_value from FD_BUSINESS_RULES where unit = ''Approved Purchase''; ',
'    SELECT unit_value into v_max_tx_value from FD_BUSINESS_RULES where unit = ''Rejected Purchase''; ',
' ',
'    SELECT id ',
'      INTO v_ccid  ',
'      FROM cc_fd ',
'     WHERE cc_no = :new.credit_card_no;    ',
'    if inserting then ',
'        if :new.total_pay < v_min_tx_value then ',
'                :new.transaction_status := ''APPROVE''; ',
'                :new.comments := ''Lower than minimum amount of $ ''||v_min_tx_value||''''; ',
'        elsif :new.total_pay >= v_min_tx_value AND :new.total_pay < v_max_tx_value then ',
'                :new.transaction_status := ''OnHold''; ',
'                :new.trans_status := ''UNREAD''; ',
'        else  ',
'                :new.transaction_status := ''REJECT''; ',
'                :new.comments := ''Higher than allowed amount of $ ''||v_max_tx_value||''''; ',
'        end if;  ',
'        :new.cc_id := v_ccid;     ',
'   end if;      ',
'    ',
'end;',
'/',
'create or replace TRIGGER "TRG_MYBOOKS_VECTOR_STORE_COMPOUND"  ',
'FOR INSERT ON my_books ',
'COMPOUND TRIGGER ',
' ',
'    TYPE t_id_tab IS TABLE OF my_books.id%TYPE INDEX BY PLS_INTEGER; ',
'    v_ids t_id_tab; ',
' ',
'    AFTER EACH ROW IS ',
'    BEGIN ',
'        v_ids(v_ids.COUNT + 1) := :NEW.id; ',
'    END AFTER EACH ROW; ',
' ',
'    AFTER STATEMENT IS ',
'    BEGIN ',
'        FOR i IN 1 .. v_ids.COUNT LOOP ',
'            INSERT INTO vector_store (doc_id, embed_id, embed_data, embed_vector) ',
'            SELECT dt.id AS doc_id,  ',
'                  et.embed_id,  ',
'                  et.embed_data,  ',
'                  to_vector(et.embed_vector) AS embed_vector ',
'            FROM my_books dt ',
'            -- CROSS JOIN TABLE( ',
'            --     dbms_vector_chain.utl_to_embeddings( ',
'            --         dbms_vector_chain.utl_to_chunks( ',
'            --             dbms_vector_chain.utl_to_text(dt.file_content),  ',
'            --             json(''{"by":"words","max":"300","split":"sentence","normalize":"all"}'') ',
'            --         ), ',
'            --         json(''{"provider":"database", "model":"tinybert_model"}'') ',
'            --     ) ',
'            -- )  t ',
'            --dbms_vector_chain.utl_to_chunks(dbms_vector_chain.utl_to_text(dt.data), json(''{"normalize":"all"}'')), ',
'            CROSS JOIN TABLE( ',
'                dbms_vector_chain.utl_to_embeddings( ',
'                    dbms_vector_chain.utl_to_chunks( ',
'                        dbms_vector_chain.utl_to_text(dt.file_content),  ',
'                        --json(''{"by":"words","max":"300","split":"sentence","normalize":"all"}'') ',
'                        json(''{"normalize":"all"}'') ',
'                    ), ',
'                    json(''{"provider":"database", "model":"doc_model"}'') ',
'                ) ',
'            )  t ',
'            CROSS JOIN JSON_TABLE( ',
'                t.column_value,  ',
'                ''$[*]'' COLUMNS ( ',
'                    embed_id NUMBER PATH ''$.embed_id'', ',
'                    embed_data VARCHAR2(4000) PATH ''$.embed_data'', ',
'                    embed_vector CLOB PATH ''$.embed_vector'' ',
'                ) ',
'            ) AS et ',
'            WHERE dt.id = v_ids(i); ',
'        END LOOP; ',
'    END AFTER STATEMENT; ',
' ',
'END trg_mybooks_vector_store_compound;',
'/',
'',
'',
'',
'',
'',
'',
'  CREATE OR REPLACE FORCE EDITIONABLE JSON RELATIONAL DUALITY VIEW "PIZZAORDERS_PIZZAORDERDETAILS_JDV"  AS ',
'  select json {',
'         --  Master table',
'         ''_id'' : po.id,',
'         ''customer_name''   : po.customer_name,',
'         ''customer_address'' : po.customer_address, ',
'         ''order_total'' : po.order_total, ',
'         ''delivery_charges'' : po.delivery_charges, ',
'         ''order_status'' : po.order_status, ',
'         ''pizza_order_details'' :',
'                [ ',
'                    --- detail table ',
'                    select json {',
'                        ''id'' : pod.id,  ',
'                        ''pizza_name''   : pod.pizza_name,',
'                        ''toppings'' : pod.toppings,',
'                        ''quantity'' : pod.quantity,',
'                        ''line_total'' : pod.line_total ',
'                        }',
'                        from pizza_order_details pod with insert update delete ',
'                        where  po.id = pod.pizza_order_id ',
'                    ]',
'          }',
'          -- allowed operations on this view',
'from pizza_order po with insert update delete;',
'',
'  CREATE OR REPLACE FORCE EDITIONABLE VIEW "RETAIL_SHOPPING_FD_VIEW" ("ID", "INV_NO", "GENDER", "AGE", "CATEGORY", "TOTAL_PAY", "CUSTOMER_FULLNAME") AS ',
'  select p.ID,  ',
'       p.INV_NO, ',
'       p.GENDER, p.AGE, p.CATEGORY, p.TOTAL_PAY, p.CUSTOMER_FULLNAME',
'  from RETAIL_SHOPPING_FD p  ',
'  where rownum < 100;',
'',
'  CREATE OR REPLACE FORCE EDITIONABLE VIEW "TRANSACTIONS_VIEW" ("ID", "TOTAL_PAY", "INV_NO", "CATEGORY", "CUST_ID", "CREDIT_CARD_NO", "TRANS_STATUS", "TRANSACTION_STATUS", "MERCHANT_ID", "MERCHANT_CITY", "MERCHANT_REGION", "MERCHANT_STATE", "MERCHANT'
||'_PLACE", "CUSTOMER_FULLNAME", "MERCHANT_FULLNAME", "LONGITUDE", "LATITUDE", "MALL") AS ',
'  select ID,',
'       TOTAL_PAY, ',
'       INV_NO,',
'       CATEGORY,',
'       CUST_ID,',
'       CREDIT_CARD_NO,',
'       TRANS_STATUS,',
'       TRANSACTION_STATUS,',
'       MERCHANT_ID,',
'       MERCHANT_CITY,',
'       MERCHANT_REGION,',
'       MERCHANT_STATE,',
'       MERCHANT_PLACE, ',
'       CUSTOMER_FULLNAME,',
'       MERCHANT_FULLNAME,',
'       LONGITUDE,',
'       LATITUDE,',
'       MALL',
'from "FD_TX_HISTORIC_DATA" a',
'union',
'select ID,',
'       TOTAL_PAY, ',
'       INV_NO,',
'       CATEGORY,',
'       CUST_ID,',
'       CREDIT_CARD_NO,',
'       TRANS_STATUS,',
'       TRANSACTION_STATUS,',
'       MERCHANT_ID,',
'       MERCHANT_CITY,',
'       MERCHANT_REGION,',
'       MERCHANT_STATE,',
'       MERCHANT_PLACE, ',
'       CUSTOMER_FULLNAME,',
'       MERCHANT_FULLNAME,',
'       LONGITUDE,',
'       LATITUDE,',
'       MALL',
'from "RETAIL_SHOPPING_FD" b;',
'',
'  CREATE OR REPLACE FORCE EDITIONABLE VIEW "USER_QUEUE_SUBSCRIBERS_VIEW" ("QUEUE_NAME", "QUEUE_TABLE", "CONSUMER_NAME", "ADDRESS", "PROTOCOL", "TRANSFORMATION", "RULE", "DELIVERY_MODE", "NONDURABLE", "QUEUE_TO_QUEUE", "SUBSCRIBER_ID", "POS_BITMAP") A'
||'S ',
'  SELECT "QUEUE_NAME","QUEUE_TABLE","CONSUMER_NAME","ADDRESS","PROTOCOL","TRANSFORMATION","RULE","DELIVERY_MODE","NONDURABLE","QUEUE_TO_QUEUE","SUBSCRIBER_ID","POS_BITMAP" FROM USER_QUEUE_SUBSCRIBERS',
';',
'',
'  CREATE OR REPLACE FORCE EDITIONABLE JSON RELATIONAL DUALITY VIEW "PIZZA_ORDERS_DV"  AS ',
'  select json ',
'{',
'         ''_id'' : po.ID,',
'         ''CUSTOMER_NAME'' : po.CUSTOMER_NAME,',
'         ''CUSTOMER_ADDRESS''   : po.CUSTOMER_ADDRESS,',
'         ''ORDER_STATUS'' : po.ORDER_STATUS, ',
'         ''PIZZA_ORDER_DETAILS'' :',
'            [ ',
'                select json {',
'                ''ID'' : pod.ID,  ',
'                --''PIZZA_ORDER_ID'' : pod.PIZZA_ORDER_ID,',
'                ''PIZZA_NAME'' : pod.PIZZA_NAME,',
'                ''TOPPINGS''   : pod.TOPPINGS,',
'                ''CRUST_TYPE'' : pod.CRUST_TYPE,',
'                ''QUANTITY'' : pod.QUANTITY,',
'                ''LINE_TOTAL''  : pod.LINE_TOTAL',
'		}',
'		from PIZZA_ORDER_DETAILS pod with insert update delete ',
'		where  po.ID = pod.PIZZA_ORDER_ID',
'    ]',
'}',
'from PIZZA_ORDER po with insert update delete;',
'',
'  CREATE OR REPLACE EDITIONABLE TRIGGER "CNDEMO_DOCUMENT_AI_DOCS_BIU" ',
'BEFORE INSERT OR UPDATE ON CNDEMO_DOCUMENT_AI_DOCS FOR EACH ROW ',
'BEGIN ',
'  IF INSERTING THEN ',
'    :new.created_by       := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),SYS_CONTEXT(''USERENV'', ''SESSION_USER'')); ',
'    :new.creation_date    := current_timestamp; ',
'    :new.last_updated_by  := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),SYS_CONTEXT(''USERENV'', ''SESSION_USER'')); ',
'    :new.last_update_date := current_timestamp; ',
'  ELSIF UPDATING THEN ',
'    :new.last_updated_by  := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),USER); ',
'    :new.last_update_date := current_timestamp; ',
'  END IF; ',
'END; ',
'',
'/',
'ALTER TRIGGER "CNDEMO_DOCUMENT_AI_DOCS_BIU" ENABLE;',
'',
'  CREATE OR REPLACE EDITIONABLE TRIGGER "CNDEMO_DOCUMENT_AI_FIELDS_BIU" ',
'BEFORE INSERT OR UPDATE ON CNDEMO_DOCUMENT_AI_FIELDS FOR EACH ROW ',
'BEGIN ',
'  IF INSERTING THEN ',
'    :new.created_by       := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),SYS_CONTEXT(''USERENV'', ''SESSION_USER'')); ',
'    :new.creation_date    := current_timestamp; ',
'    :new.last_updated_by  := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),SYS_CONTEXT(''USERENV'', ''SESSION_USER'')); ',
'    :new.last_update_date := current_timestamp; ',
'  ELSIF UPDATING THEN ',
'    :new.last_updated_by  := COALESCE(SYS_CONTEXT(''APEX$SESSION'',''APP_USER''),USER); ',
'    :new.last_update_date := current_timestamp; ',
'  END IF; ',
'END; ',
'',
'/',
'ALTER TRIGGER "CNDEMO_DOCUMENT_AI_FIELDS_BIU" ENABLE;',
'',
'  CREATE OR REPLACE EDITIONABLE TRIGGER "BI_COMMON_USERS" ',
'  before insert on "COMMON_USERS"                ',
'  for each row   ',
'begin    ',
'  if :NEW."USER_ID" is null then  ',
'    select "COMMON_USER_SEQ".nextval into :NEW."USER_ID" from sys.dual;  ',
'  end if;  ',
'end;',
'/',
'ALTER TRIGGER "BI_COMMON_USERS" ENABLE;',
'',
'  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_MYBOOKS_VECTOR_STORE_COMPOUND" ',
'FOR INSERT ON my_books ',
'COMPOUND TRIGGER ',
' ',
'    TYPE t_id_tab IS TABLE OF my_books.id%TYPE INDEX BY PLS_INTEGER; ',
'    v_ids t_id_tab; ',
' ',
'    AFTER EACH ROW IS ',
'    BEGIN ',
'        v_ids(v_ids.COUNT + 1) := :NEW.id; ',
'    END AFTER EACH ROW; ',
' ',
'    AFTER STATEMENT IS ',
'    BEGIN ',
'        FOR i IN 1 .. v_ids.COUNT LOOP ',
'            INSERT INTO vector_store (doc_id, embed_id, embed_data, embed_vector) ',
'            SELECT dt.id AS doc_id,  ',
'                  et.embed_id,  ',
'                  et.embed_data,  ',
'                  to_vector(et.embed_vector) AS embed_vector ',
'            FROM my_books dt ',
'            -- CROSS JOIN TABLE( ',
'            --     dbms_vector_chain.utl_to_embeddings( ',
'            --         dbms_vector_chain.utl_to_chunks( ',
'            --             dbms_vector_chain.utl_to_text(dt.file_content),  ',
'            --             json(''{"by":"words","max":"300","split":"sentence","normalize":"all"}'') ',
'            --         ), ',
'            --         json(''{"provider":"database", "model":"tinybert_model"}'') ',
'            --     ) ',
'            -- )  t ',
'            --dbms_vector_chain.utl_to_chunks(dbms_vector_chain.utl_to_text(dt.data), json(''{"normalize":"all"}'')), ',
'            CROSS JOIN TABLE( ',
'                dbms_vector_chain.utl_to_embeddings( ',
'                    dbms_vector_chain.utl_to_chunks( ',
'                        dbms_vector_chain.utl_to_text(dt.file_content),  ',
'                        --json(''{"by":"words","max":"300","split":"sentence","normalize":"all"}'') ',
'                        json(''{"normalize":"all"}'') ',
'                    ), ',
'                    json(''{"provider":"database", "model":"doc_model"}'') ',
'                ) ',
'            )  t ',
'            CROSS JOIN JSON_TABLE( ',
'                t.column_value,  ',
'                ''$[*]'' COLUMNS ( ',
'                    embed_id NUMBER PATH ''$.embed_id'', ',
'                    embed_data VARCHAR2(4000) PATH ''$.embed_data'', ',
'                    embed_vector CLOB PATH ''$.embed_vector'' ',
'                ) ',
'            ) AS et ',
'            WHERE dt.id = v_ids(i); ',
'        END LOOP; ',
'    END AFTER STATEMENT; ',
' ',
'END trg_mybooks_vector_store_compound;',
'/',
'ALTER TRIGGER "TRG_MYBOOKS_VECTOR_STORE_COMPOUND" ENABLE;',
'',
'  CREATE OR REPLACE EDITIONABLE TRIGGER "PASSENGER_LIST_TRG" ',
'after ',
'update on "PASSENGER_LIST"  ',
'for each row ',
'declare ',
'        v_booking_id number; ',
'        -- v_n number := 0; ',
'        -- v_min_time_diff_number number; ',
'         ',
'begin ',
'   null;  ',
'    ',
'end; ',
'  ',
' ',
' ',
'-- create or replace TRIGGER "RETAIL_SHOPPING_FD_TRG"  ',
'-- before ',
'-- insert on "RETAIL_SHOPPING_FD"  ',
'-- for each row ',
'-- declare ',
'--         v_ccid number; ',
'--         v_n number := 0; ',
'--         v_min_time_diff_number number; ',
'--         v_min_tx_value number; ',
'--         v_max_tx_value number; ',
'-- begin ',
' ',
'--     SELECT unit_value into v_min_time_diff_number from FD_BUSINESS_RULES where unit = ''Minimum Time Frequency''; ',
'--     SELECT unit_value into v_min_tx_value from FD_BUSINESS_RULES where unit = ''Approved Purchase''; ',
'--     SELECT unit_value into v_max_tx_value from FD_BUSINESS_RULES where unit = ''Rejected Purchase''; ',
' ',
'--     SELECT id ',
'--       INTO v_ccid  ',
'--       FROM cc_fd ',
'--      WHERE cc_no = :new.credit_card_no;    ',
'--     if inserting then ',
'--         if :new.total_pay < v_min_tx_value then ',
'--                 :new.transaction_status := ''APPROVED''; ',
'--                 :new.comments := ''Lower than minimum amount of $ ''||v_min_tx_value||''''; ',
'--         elsif :new.total_pay >= v_min_tx_value AND :new.total_pay < v_max_tx_value then ',
'--                 :new.transaction_status := ''OnHold''; ',
'--                 :new.trans_status := ''UNREAD''; ',
'--         else  ',
'--                 :new.transaction_status := ''REJECTED''; ',
'--                 :new.comments := ''Higher than allowed amount of $ ''||v_max_tx_value||''''; ',
'--         end if;  ',
'--         :new.cc_id := v_ccid;     ',
'--    end if;      ',
'    ',
'-- end; ',
'--; ',
'',
'/',
'ALTER TRIGGER "PASSENGER_LIST_TRG" ENABLE;',
'',
'  CREATE OR REPLACE EDITIONABLE TRIGGER "RETAIL_SHOPPING_FD_TRG" ',
'before ',
'insert on "RETAIL_SHOPPING_FD"  ',
'for each row ',
'declare ',
'        v_ccid number; ',
'        v_n number := 0; ',
'        v_min_time_diff_number number; ',
'        v_min_tx_value number; ',
'        v_max_tx_value number; ',
'begin ',
' ',
'    SELECT unit_value into v_min_time_diff_number from FD_BUSINESS_RULES where unit = ''Minimum Time Frequency''; ',
'    SELECT unit_value into v_min_tx_value from FD_BUSINESS_RULES where unit = ''Approved Purchase''; ',
'    SELECT unit_value into v_max_tx_value from FD_BUSINESS_RULES where unit = ''Rejected Purchase''; ',
' ',
'    SELECT id ',
'      INTO v_ccid  ',
'      FROM cc_fd ',
'     WHERE cc_no = :new.credit_card_no;    ',
'    if inserting then ',
'        if :new.total_pay < v_min_tx_value then ',
'                :new.transaction_status := ''APPROVE''; ',
'                :new.comments := ''Lower than minimum amount of $ ''||v_min_tx_value||''''; ',
'        elsif :new.total_pay >= v_min_tx_value AND :new.total_pay < v_max_tx_value then ',
'                :new.transaction_status := ''OnHold''; ',
'                :new.trans_status := ''UNREAD''; ',
'        else  ',
'                :new.transaction_status := ''REJECT''; ',
'                :new.comments := ''Higher than allowed amount of $ ''||v_max_tx_value||''''; ',
'        end if;  ',
'        :new.cc_id := v_ccid;     ',
'   end if;      ',
'    ',
'end;',
'/',
'ALTER TRIGGER "RETAIL_SHOPPING_FD_TRG" ENABLE; '))
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9029400057114043)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'AICHAT'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9029654017114042)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'ANNUAL_DEATH_CAUSE'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9029845724114041)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'APPUSERS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9030001642114040)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'APPUSERS_OLD'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9030271157114039)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'AQ$_FUNDSTRANSFER_QUEUE_TABLE_H'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9030422995114038)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'AUDIO_STORAGE'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9030630496114037)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'AUDIO_T'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9030829477114036)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'BANK_ACCOUNTS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9031063363114035)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'BANK_CUSTOMERS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9031232450114034)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'BANK_CUSTOMERS_BENEFICIARIES'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9031406199114034)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'BANK_LEDGER'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9031680323114033)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'BANK_TRANSFERS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9031887381114032)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'CC_FD'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9032077126114031)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'CNDEMO_DOCUMENT_AI_DOCS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9032249676114030)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'CNDEMO_DOCUMENT_AI_FIELDS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9032474281114029)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'COMMON_ROLE'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9032624692114028)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'COMMON_USERS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9032866726114027)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'CUSTOMERS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9033012465114026)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'FD_ANM'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9033272953114023)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'FD_BANK_NAMES'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9033441987114022)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'FD_BANK_TRANSACTIONS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9033648549114021)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'FD_BUSINESS_RULES'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9033808254114020)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'FD_TRANSACTIONS_LOG'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9034025062114020)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'FD_TX_HISTORIC_DATA'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9034236887114019)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'FINBANK_ACCOUNTS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9034416439114018)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'FSCUSTOMERS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9034609709114017)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'FUNDSTRANSFER_QUEUE_TABLE'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9034866270114016)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'HLTERM'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9035007483114015)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'HOSPITALS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9035235479114014)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'MACHINE_LEARNING_CONFIGS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9035430629114013)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'MSGLOGS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9035698637114012)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'MYAUDIODATA'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9035896063114011)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'MY_BOOKS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9036027373114009)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'PASSENGER_LIST'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9036209269114008)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'PATIENTS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9036432627114008)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'PIZZASHOPS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9036685170114007)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'PIZZA_DELIVERY_MODE'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9036872715114006)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'PIZZA_ORDER'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9037023479114005)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'PIZZA_ORDER_DETAILS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9037207233114004)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'RELATED_LABELS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9037461172114003)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'RETAIL_SHOPPING'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9037673334114001)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'RETAIL_SHOPPING_FD'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9037823977114001)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'SQLS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9038095838114000)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'TECHNOLOGIES'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9038290320113999)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'UNESCO_SITES'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9038451709113998)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'USER_PROFILE_BC'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9038664403113997)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'US_HOSPITALS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9038885497113996)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TABLE'
,p_object_name=>'VECTOR_STORE'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9039008850113995)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TRIGGER'
,p_object_name=>'BI_COMMON_USERS'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9039238081113994)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TRIGGER'
,p_object_name=>'CNDEMO_DOCUMENT_AI_DOCS_BIU'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9039467072113993)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TRIGGER'
,p_object_name=>'CNDEMO_DOCUMENT_AI_FIELDS_BIU'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9039654680113992)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TRIGGER'
,p_object_name=>'PASSENGER_LIST_TRG'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9039836859113991)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TRIGGER'
,p_object_name=>'RETAIL_SHOPPING_FD_TRG'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9040075349113990)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'TRIGGER'
,p_object_name=>'TRG_MYBOOKS_VECTOR_STORE_COMPOUND'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9040259619113989)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'PIZZAORDERS_PIZZAORDERDETAILS_JDV'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9040400214113989)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'PIZZA_ORDERS_DV'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9040678512113988)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'RETAIL_SHOPPING_FD_VIEW'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9040836921113987)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'TRANSACTIONS_VIEW'
);
wwv_flow_imp_shared.create_install_object(
 p_id=>wwv_flow_imp.id(9041063012113986)
,p_script_id=>wwv_flow_imp.id(9029300862114045)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'USER_QUEUE_SUBSCRIBERS_VIEW'
);
wwv_flow_imp.component_end;
end;
/
